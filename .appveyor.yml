# Appveyor CI configuration for Cross-build Raspberry Pi DEB + multi-platform build
environment:
  PYTHON_V: 3.13

  matrix:
  - job_name: rpi
    appveyor_build_worker_image: Ubuntu2204
  - job_name: windows
    appveyor_build_worker_image: Visual Studio 2022
  - job_name: linux
    appveyor_build_worker_image: Ubuntu2204
  - job_name: macos
    appveyor_build_worker_image: macos-monterey

version: '{build}'
skip_tags: true
clone_depth: 1

init:
  - ps: Update-AppveyorBuild -Version "$($env:APPVEYOR_REPO_COMMIT.substring(0,7)) ($env:APPVEYOR_BUILD_NUMBER)"
  - ps: |
      $env:artifact_prefix = 'disable_artifact'
      if ([bool]$env:APPVEYOR_PULL_REQUEST_NUMBER -eq $true) {
        $env:artifact_prefix = 'artisan'
      }

branches:
  only:
    - master

stack:
  python ${PYTHON_V}

# ========== JOB: RPI CROSS BUILD ==========
for:
-
  matrix:
    only:
      - job_name: rpi
    fast_finish: false

  environment:
    ARTISAN_OS: rpi
    PYTHONSITEPKGS: /home/appveyor/venv${PYTHON_V}/lib/python${PYTHON_V}/site-packages

  install:
    - echo "Raspberry Pi Cross Install"
    - chmod +x .ci/*.sh
    - bash .ci/install-rpi-cross.sh

  build_script:
    - echo "Cross-build done inside install step"

  artifacts:
    - path: 'src/%artifact_prefix%-*.deb'

  deploy_script:
    - bash .ci/upload.sh artisan-*.deb

# ========== JOB: WINDOWS ==========
-
  matrix:
    only:
      - job_name: windows
    fast_finish: false

  install:
    - cmd: echo Windows Install
    - cmd: .ci\install-win.bat

  build_script:
    - cmd: echo Windows Build
    - cmd: cd src
    - cmd: build-win3-pi.bat

  artifacts:
    - path: 'src\%artifact_prefix%-win*setup.exe'

  deploy_script:
    - bash ../.ci/upload.sh artisan-win*setup.exe

# ========== JOB: LINUX ==========
-
  matrix:
    only:
      - job_name: linux
    fast_finish: false

  install:
    - echo Linux Install
    - chmod +x .ci/*.sh
    - bash .ci/install-linux.sh

  build_script:
    - echo Linux Build
    - chmod +x src/*.sh
    - cd src
    - ./build-linux.sh
    - ./build-linux-pkg.sh

  artifacts:
    - path: 'src/%artifact_prefix%-*.deb'
    - path: 'src/%artifact_prefix%-*.rpm'
    - path: 'src/%artifact_prefix%-*.AppImage'

  deploy_script:
    - bash ../.ci/upload.sh artisan-*.deb
    - bash ../.ci/upload.sh artisan-*.rpm
    - bash ../.ci/upload.sh artisan-*.AppImage

# ========== JOB: MACOS ==========
-
  matrix:
    only:
      - job_name: macos
    fast_finish: false

  install:
    - echo MacOS Install
    - chmod +x .ci/*.sh
    - bash .ci/install-macos.sh

  build_script:
    - echo MacOS Build
    - chmod +x src/*.sh
    - cd src
    - ./build-macos3.sh

  artifacts:
    - path: 'src/%artifact_prefix%-*.dmg'

  deploy_script:
    - bash ../.ci/upload.sh artisan-*.dmg
